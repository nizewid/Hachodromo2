@inject INativeDialogService dialogService

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation" />

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Membresia:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Membership.Name" />
            <ValidationMessage For="@(() => Membership.Name)" />
        </div>
        <div>
			<label>Descripción:</label>
			<InputText class="form-control" @bind-Value="@Membership.Description" />
			<ValidationMessage For="@(() => Membership.Description)" />
        </div>
        <div>
			<label>Precio:</label>
            <InputNumber class="form-control" @bind-Value="@Membership.Price" />
            <ValidationMessage For="@(() => Membership.Price)" />
        </div>
		<div>
			<label>Duración:</label>
			<InputNumber class="form-control" @bind-Value="@Membership.Duration" />
			<ValidationMessage For="@(() => Membership.Duration)" />
        </div>
        <div>
			<label>Descuento:</label>
            <InputNumber class="form-control" @bind-Value="@Membership.Discount" />
            <ValidationMessage For="@(() => Membership.Discount)" />
        </div>
    </div>
    <button class="btn btn-primary" type="submit">Guardar Cambios</button>
    <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
</EditForm>

@code {
    private EditContext editContext = null!;

    [Parameter]
    [EditorRequired]
    public Membership Membership { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    [EditorRequired]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; }

    protected override void OnInitialized()
    {
        editContext = new(Membership);
    }

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasMofied = editContext.IsModified();
        if (!formWasMofied || FormPostedSuccessfully)
        {
            return;
        }

		var confirm = await dialogService.ShowConfirmMessageAsync(
					"¿Está seguro de que desea salir?",
					"Los cambios no guardados se perderán.");
        if (!confirm)
        {
            context.PreventNavigation();
        }

    }
}
