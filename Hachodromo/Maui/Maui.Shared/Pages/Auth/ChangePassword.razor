@inject IRepository repository
@inject INativeDialogService dialogService
@inject NavigationManager navigationManager
@attribute [Authorize]

@if (loading)
{
    <div class="spinner" />
}
<div class="row justify-content-center my-4">
    <div class="col-12 col-sm-10 col-md-9 col-lg-8 col-xl-6">
        <EditForm Model="changePasswordDto" OnValidSubmit="ChangePasswordAsync">
            <DataAnnotationsValidator />
            <div class="card shadow rounded-4 bg-light border-0">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center border-bottom">

                    <h5 class="mb-0">
                        <i class="oi oi-key me-2"></i> Cambiar Contraseña
                    </h5>
                    
                </div>
                <div class="card-body p-4">
                    <div class="mb-3">
                        <label class="form-label">Contraseña actual:</label>
                        <InputText type="password" class="form-control" @bind-Value="@changePasswordDto.CurrentPassword" />
                        <ValidationMessage For="@(() => changePasswordDto.CurrentPassword)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Nueva contraseña:</label>
                        <InputText type="password" class="form-control" @bind-Value="@changePasswordDto.NewPassword" />
                        <ValidationMessage For="@(() => changePasswordDto.NewPassword)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Confirmación de nueva contraseña:</label>
                        <InputText type="password" class="form-control" @bind-Value="@changePasswordDto.Confirm" />
                        <ValidationMessage For="@(() => changePasswordDto.Confirm)" />
                    </div>
                    <div class="mt-3">
                        <a class="btn btn-sm btn-light me-2" href="/editUser">
                            <i class="bi bi-arrow-left-circle me-1"></i> Regresar
                        </a>
                        <button class="btn btn-sm btn-light" type="submit">
              <i class="bi bi-check-circle me-1"></i> Guardar
                        </button>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div>


@code {
    private ChangePasswordDto changePasswordDto = new();
    private bool loading;

    [CascadingParameter]
    private BlazoredModalInstance BlazoredModal { get; set; } = default!;


    private async Task ChangePasswordAsync()
    {
        loading = true;
        var responseHttp = await repository.Post("/api/accounts/changePassword", changePasswordDto);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await dialogService.ShowAlertAsync("Error", message ?? "Ocurrió un error desconocido", "Aceptar");
            loading = false;
            return;
        }

        loading = false;
        await BlazoredModal.CloseAsync(ModalResult.Ok());
        navigationManager.NavigateTo("/editUser");
        var toast = dialogService.ShowToastAsync("Contraseña cambiada con éxito");
        //await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Contraseña cambiada con éxito.");
    }
}
