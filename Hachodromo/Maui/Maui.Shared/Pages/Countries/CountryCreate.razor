@inject IRepository repository
@inject NavigationManager NavigationManager
@inject INativeDialogService dialogService
@attribute [Authorize(Roles = "Admin")]

<h3>Crear País</h3>
<CountryForm @ref="countryForm" Country="country" OnValidSubmit="Create" ReturnAction="Return"/>

@code {
	private Country country = new();
	private CountryForm? countryForm;

	[CascadingParameter]
	BlazoredModalInstance BlazoredModal { get; set; } = default!;

	private async Task Create()
	{
		var httpResponse = await repository.Post<Country>("/api/countries", country);
		if (httpResponse.Error){
			var message = await httpResponse.GetErrorMessageAsync();
			await dialogService.ShowAlertAsync("Error", message ?? "Ocurrió un error desconocido", "Aceptar");
			return;
		}
		await dialogService.ShowToastAsync("País creado", ToastType.Success);
		await BlazoredModal.CloseAsync(ModalResult.Ok());
		Return();
	}
	private void Return()
	{
		countryForm!.FormPostedSuccessfully = true;
		NavigationManager.NavigateTo("/countries");
	}
}
